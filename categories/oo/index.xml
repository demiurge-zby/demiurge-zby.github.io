<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>OO on Demiurge</title>
        <link>https://demiurge-zby.github.io/categories/oo/</link>
        <description>Recent content in OO on Demiurge</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>Demiurge</copyright>
        <lastBuildDate>Mon, 03 Mar 2025 12:15:30 +0800</lastBuildDate><atom:link href="https://demiurge-zby.github.io/categories/oo/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>北航OOU1 HW1 表达式解析</title>
        <link>https://demiurge-zby.github.io/p/%E5%8C%97%E8%88%AAoou1-hw1-%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Mon, 03 Mar 2025 12:15:30 +0800</pubDate>
        
        <guid>https://demiurge-zby.github.io/p/%E5%8C%97%E8%88%AAoou1-hw1-%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%A7%A3%E6%9E%90/</guid>
        <description>&lt;img src="https://demiurge-zby.github.io/p/%E5%8C%97%E8%88%AAoou1-hw1-%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%A7%A3%E6%9E%90/123.png" alt="Featured image of post 北航OOU1 HW1 表达式解析" /&gt;&lt;h2 id=&#34;作业实现&#34;&gt;作业实现
&lt;/h2&gt;&lt;h3 id=&#34;预处理&#34;&gt;预处理
&lt;/h3&gt;&lt;p&gt;replaceAll()函数 &lt;br&gt;
解决空白符与连续正负号&lt;/p&gt;
&lt;h3 id=&#34;表达式解析递归下降&#34;&gt;表达式解析（递归下降）
&lt;/h3&gt;&lt;p&gt;递归下降的特点是下降和递归。 &lt;br&gt;
下降实现了功能的独立性。 &lt;br&gt;
而递归是由要解析的表达式的结构决定的。&lt;/p&gt;
&lt;h4 id=&#34;lexer的作用&#34;&gt;Lexer的作用
&lt;/h4&gt;&lt;p&gt;核心作用是处理数字，将连续的数字字符变为一个token单位&lt;br&gt;
其他保持不变&lt;/p&gt;
&lt;p&gt;提供方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当前token是什么   &lt;code&gt;peek()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;去下一个token  &lt;code&gt;next()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其实就相当于C语言字符串中的&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;str[i]&lt;/li&gt;
&lt;li&gt;i++&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;只是我们需要的信息没那么多，就不采用先把式子变成token的ArrayList再去解析的方法   &lt;br&gt;
而是在解析的时候利用lexer作为移动和识别的工具&lt;/p&gt;
&lt;h4 id=&#34;parseexpr&#34;&gt;parseExpr
&lt;/h4&gt;&lt;p&gt;Expr是Term的和&lt;br&gt;
通过加减符号实现Term的分割&lt;/p&gt;
&lt;p&gt;判加减  (用&lt;code&gt;peek()&lt;/code&gt;判内容  用&lt;code&gt;next()&lt;/code&gt;进入下一token)  &lt;br&gt;
parseTerm() addTerm()     &lt;br&gt;
循环：   &lt;br&gt;
判加减  (用&lt;code&gt;peek()&lt;/code&gt;判内容  用&lt;code&gt;next()&lt;/code&gt;进入下一token)  &lt;br&gt;
parseTerm() addTerm()&lt;/p&gt;
&lt;h4 id=&#34;parseterm&#34;&gt;parseTerm
&lt;/h4&gt;&lt;p&gt;Term是Factor的积
通过乘号实现Factor的分割（其中第一个Factor可有额外正负号）&lt;/p&gt;
&lt;p&gt;判加减  (用&lt;code&gt;peek()&lt;/code&gt;判内容  用&lt;code&gt;next()&lt;/code&gt;进入下一token)  &lt;br&gt;
parseFactor() addFactor()&lt;br&gt;
循环：   &lt;br&gt;
判乘号  (用&lt;code&gt;peek()&lt;/code&gt;判内容  用&lt;code&gt;next()&lt;/code&gt;进入下一token)  &lt;br&gt;
parseFactor() addFactor()&lt;/p&gt;
&lt;h4 id=&#34;parsefactor&#34;&gt;parseFactor
&lt;/h4&gt;&lt;p&gt;Factor约等于解析最底层&lt;/p&gt;
&lt;p&gt;分为三类，需要建立接口&lt;/p&gt;
&lt;p&gt;常数因子与幂函数因子可以用 &lt;code&gt;A*x^b&lt;/code&gt;统一   &lt;br&gt;
表达式因子分为&lt;code&gt;(Expr)&lt;/code&gt;与&lt;code&gt;(Expr)^n&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;所以Expr类，Mono类&lt;code&gt;A*x^b&lt;/code&gt;和Power类&lt;code&gt;(Expr)^n&lt;/code&gt;都需要Factor接口，以在解析完成时返回Factor类型的结果&lt;/p&gt;
&lt;p&gt;其中Expr还能下降为&lt;code&gt;A*x^b&lt;/code&gt;，&lt;code&gt;(Expr)&lt;/code&gt;与&lt;code&gt;(Expr)^n&lt;/code&gt;    &lt;br&gt;
因此最小单位就是Mono类&lt;code&gt;A*x^b&lt;/code&gt;和Power类&lt;code&gt;(Expr)^n&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;解析方法：&lt;/p&gt;
&lt;p&gt;先判一下加减  (用&lt;code&gt;peek()&lt;/code&gt;判内容  用&lt;code&gt;next()&lt;/code&gt;进入下一token)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;判到左括号  (用&lt;code&gt;peek()&lt;/code&gt;判内容  用&lt;code&gt;next()&lt;/code&gt;进入下一token)&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;parseExpr();&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;把右括号跳过 &lt;code&gt;next()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;判^  (用&lt;code&gt;peek()&lt;/code&gt;判内容  用&lt;code&gt;next()&lt;/code&gt;进入下一token)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;有^ : （若有正号先next()掉）peek()读取指数 再&lt;code&gt;next()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;指数是0 ： return Mono类 1*x^0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;否则： return Power类&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;无^ ：直接return Expr类&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;判到数字 (用&lt;code&gt;peek()&lt;/code&gt;判内容  用&lt;code&gt;next()&lt;/code&gt;进入下一token)&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;Mono类 数字*x^0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;判到x&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;Mono类 1*x^n 无^时n=1特殊处理&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;关于正负传参&#34;&gt;关于正负：传参
&lt;/h4&gt;&lt;p&gt;我在解析过程中将正负号落实到了Mono类与Power类    &lt;br&gt;
这样，Factor之间只是乘，Term之间只是加，相对简单&lt;/p&gt;
&lt;p&gt;落实的方法: 传参 isNeg
初始参数值，即MainClass调用时是parseExpr(false)  &lt;br&gt;
改变的规则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;根据传入参数，在解析方法定义内部变量isNegative，用于传递给下级&lt;/li&gt;
&lt;li&gt;遇到负号，isNegative = !isNegative&lt;/li&gt;
&lt;li&gt;对于Expr到Term符号的继承，每一项isNegative的初始值都是isNeg&lt;/li&gt;
&lt;li&gt;对于Term到Factor符号的继承，只有第一项isNegative的初始值是isNeg，其余初始值为False&lt;/li&gt;
&lt;li&gt;特别的，对于Power类型，其Expr由于先被解析，所以正负号已经落实到内部，这时候Power的正负性就应该做出调整：&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;若符号为正，则无影响&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;若符号为负，且指数为奇数，则Power类型应当必须为正数，因为负属性已经在Expr中展现了&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;若符号为负，且指数为偶数，则Expr的负属性不能展现，Power类型需要为负&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最终正负就落实到Mono与Power上，这两个类有isNeg属性&lt;/p&gt;
&lt;h3 id=&#34;表达式求值&#34;&gt;表达式求值
&lt;/h3&gt;&lt;p&gt;最终结果为多项式，而Mono和Power也可变为多项式。  &lt;br&gt;
只需先转化为多项式，再实现多项式的加与乘即可。&lt;/p&gt;
&lt;h4 id=&#34;poly类&#34;&gt;Poly类
&lt;/h4&gt;&lt;p&gt;只是有一个TreeMap，里面放着键值对&lt;code&gt;&amp;lt;指数，系数&amp;gt;&lt;/code&gt;  &lt;br&gt;
TreeMap的优势在于merge()方法和有序   &lt;br&gt;
merge方法在加入一个键值对可以实现合并同类项的作用&lt;/p&gt;
&lt;h4 id=&#34;mono的topoly&#34;&gt;Mono的toPoly()
&lt;/h4&gt;&lt;p&gt;先处理Negate(),直接系数取负
然后直接new一个Poly，让其TreeMap去put(指数，系数)&lt;/p&gt;
&lt;h4 id=&#34;power的topoly&#34;&gt;Power的toPoly()
&lt;/h4&gt;&lt;p&gt;需要有Expr的toPoly(),再使用Poly的幂运算，再实施Negate()&lt;/p&gt;
&lt;h4 id=&#34;exprtermfactor的topoly&#34;&gt;Expr,Term,Factor的toPoly()
&lt;/h4&gt;&lt;p&gt;Expr就是Term的toPoly()的和   &lt;br&gt;
Term就是Factor的toPoly()的积     &lt;br&gt;
Factor的toPoly()借助接口就是Mono,Expr与Power的toPoly()&lt;/p&gt;
&lt;h4 id=&#34;poly的加乘幂&#34;&gt;Poly的加，乘，幂
&lt;/h4&gt;&lt;p&gt;加法直接merge进去    &lt;br&gt;
乘法双重循环一项项merge进去（需注意只有一个因子时，另一个因子应变为&amp;lt;0,1&amp;gt;）   &lt;br&gt;
幂可用快速幂，也可直接循环乘。同样注意上述问题。&lt;/p&gt;
&lt;p&gt;当然三种运算最后都应去除系数为0的单项式&lt;/p&gt;
&lt;h3 id=&#34;结果的输出&#34;&gt;结果的输出
&lt;/h3&gt;&lt;p&gt;由于结果是多项式，输出相对简单。&lt;/p&gt;
&lt;p&gt;需要注意：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;空Tree要输出0&lt;/li&gt;
&lt;li&gt;若存在单项式系数为正，应将其提前并省略正号&lt;/li&gt;
&lt;li&gt;指数为0的项只输出数字，指数为1的项只输出x，指数为-1的项只输出-x&lt;/li&gt;
&lt;li&gt;中间的正项需额外输出+&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;评测机实现&#34;&gt;评测机实现
&lt;/h2&gt;&lt;h3 id=&#34;datamaker&#34;&gt;DataMaker
&lt;/h3&gt;&lt;p&gt;使用c程序，同样使用递归下降的方法去生成表达式&lt;br&gt;
printExpr() -&amp;gt; printTerm() -&amp;gt; printFactor() -&amp;gt; &amp;hellip;   &lt;br&gt;
用rand()随机项数，因子数，正负号，以及因子的种类等等&lt;/p&gt;
&lt;h3 id=&#34;check&#34;&gt;Check
&lt;/h3&gt;&lt;p&gt;由于Python库的强大，这里使用了Python的sympy库  &lt;br&gt;
检测两个表达式化简结果是否相等，实现了对拍&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;sympy&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sympy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;symbols&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;x&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;./outA.txt&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fileA&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;e1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fileA&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;expr1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;e1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;^&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;**&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;./outB.txt&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fileB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;e2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fileB&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;expr2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;e2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;^&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;**&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;expr1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sympy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;simplify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;expr1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ratio&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;expr2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sympy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;simplify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;expr2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ratio&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sympy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;simplify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;expr1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;expr2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;True&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;False&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;data:&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;./in.txt&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;filein&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;filein&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;right:&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;yours:&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;运行脚本&#34;&gt;运行脚本
&lt;/h3&gt;&lt;p&gt;Windows系统的bat脚本和OS学习的Linux脚本异曲同工&lt;/p&gt;
&lt;p&gt;主要使用了这些操作&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;指令&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;作用&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;REM&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;注释&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;java -jar 名称.jar&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;运行jar包&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;名称.exe&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;运行.exe文件&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;python 名称.py&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;运行python程序&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&amp;lt; ，&amp;gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;实现重定向&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bat&#34; data-lang=&#34;bat&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; off
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;/l&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;%%&lt;/span&gt;i &lt;span class=&#34;k&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;normaldata.exe &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; in.txt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;java -jar oo_homework_2025_xxxxxxxx_hw_1.jar &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; in.txt &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; outA.txt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;java -jar 1.jar &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; in.txt &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; outB.txt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python check.py
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;java -jar 2.jar &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; in.txt &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; outB.txt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python check.py
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;java -jar 3.jar &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; in.txt &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; outB.txt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python check.py
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;java -jar 4.jar &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; in.txt &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; outB.txt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python check.py
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;java -jar 5.jar &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; in.txt &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; outB.txt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python check.py
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;java -jar 6.jar &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; in.txt &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; outB.txt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python check.py
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;java -jar 7.jar &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; in.txt &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; outB.txt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python check.py
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; -------------------------------------------------------
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cmd
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;如何制作jar包&#34;&gt;如何制作jar包
&lt;/h3&gt;&lt;p&gt;具体流程可自行搜索。&lt;/p&gt;
&lt;p&gt;文件-&amp;gt;项目结构-&amp;gt;工件-&amp;gt; + -&amp;gt; JAR -&amp;gt; &amp;hellip;&lt;/p&gt;
&lt;p&gt;构建-&amp;gt;构建工件&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
